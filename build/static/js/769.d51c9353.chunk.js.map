{"version":3,"file":"static/js/769.d51c9353.chunk.js","mappings":"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","sources":["components/Modals/BrandsModal/BrandsModal.tsx","components/PageTitleWrapper/index.tsx","content/applications/Brands/PageHeader.tsx","content/applications/Brands/BulkActions.tsx","content/applications/Brands/BrandsTable.tsx","content/applications/Brands/Brands.tsx","content/applications/Brands/index.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","../node_modules/@mui/icons-material/EditTwoTone.js","webpack://nest-rental/./src/components/Modals/Modal.module.scss?68d1"],"sourcesContent":["\nimport styles from '../Modal.module.scss';\nimport { AiFillCloseCircle } from 'react-icons/ai'\nimport { ModalPropsTestEdit } from 'src/default/interfaces/Interfaces';\nimport { useState } from 'react';\nimport {LoadingButton} from '@mui/lab'\nimport { Title } from 'src/components/Title/Title';\nimport { useEffect } from 'react';\nimport { TextField } from '@mui/material';\nimport http from 'src/http';\nimport { IBrand } from 'src/models/product';\n\n\nexport const BrandsModal = ({ openModal, setModal, data, edit}: ModalPropsTestEdit) => {\n\n  const [editedBrand, setEditedBrand] = useState<string>('');\n  const [newBrand, setNewBrand] = useState<string>('');\n  const [idBrand, setIdBrand] = useState<string>('');\n  const [loading, setLoading] = useState<Boolean>(false);\n  const [message, setMessage] = useState<string>('');\n\n\n  async function editBrandById(event: React.FormEvent<HTMLFormElement>){\n    event.preventDefault();\n    setLoading(true);\n    http.put<IBrand>(`/marcas/${idBrand}`, {\n      nome: editedBrand,\n      identificador: '???'\n    })\n      .then(response=>{\n          if(response.status == 202){\n            setMessage(\"Marca editada com sucesso\")\n          }\n      }).catch(error=>\n        setMessage(\"Erro no servidor, por favor, tente novamente.\")\n      )\n    setLoading(false);\n    window.location.reload();\n  }\n\n\n  async function createBrand(event: React.FormEvent<HTMLFormElement>){\n    event.preventDefault();\n    setLoading(true);\n    http.post<IBrand>('/marcas', {\n      nome: newBrand,\n      identificador: '???'\n    })\n      .then(response=>{\n          if(response.status == 202){\n            setMessage(\"Marca criada com sucesso\")\n          }\n      }).catch(error=>\n        setMessage(\"Erro no servidor, por favor, tente novamente.\")\n      )\n    setLoading(false);\n    window.location.reload();\n  }\n\n\n  useEffect(()=>{\n    if(data){\n      setEditedBrand(data.nome);\n      setIdBrand(data.id);\n    }\n  }, [data]);\n\n\n\n  return (\n    <>\n      {openModal && (\n        <div className={styles.modalCategory} style={{backgroundColor: 'rgb(255, 255, 255)'}}>\n          <div className={styles.modal__divCloseButton}>\n            <button\n              className={styles.modal__divCloseButton__closeButton}\n              onClick={(e) => setModal(!openModal)}\n            >\n              <AiFillCloseCircle />\n            </button>\n          </div>\n\n          <Title>Nova marca</Title>\n          <form onSubmit={edit? editBrandById: createBrand}>\n            <div style={{ marginTop: '1rem' }}>\n              <TextField \n                id=\"brand_name\"\n                type=\"text\"\n                label=\"Nome\"\n                fullWidth={true}\n                required={true}\n                color=\"primary\"\n                placeholder=\"Digite o nome da nova marca\"\n                onChange={edit? (e) => setEditedBrand(e.target.value): (e)=>setNewBrand(e.target.value)}\n                value={edit? editedBrand: newBrand}\n              />\n            </div>\n\n\n            <div style={{ display: 'flex', gridGap: '1rem', marginTop: '1rem'}}>\n              {edit ? \n                <LoadingButton \n                  color='primary' \n                  type='submit' \n                  variant='contained' \n                  size='medium'\n                  loading={loading?true: false}\n                >\n                  Editar\n                </LoadingButton>\n                  :\n                <LoadingButton \n                  color='primary' \n                  type='submit'\n                  variant='contained' \n                  size='medium'\n                  loading={loading?true: false}\n                >\n                  Cadastrar\n                </LoadingButton>\n              }\n              <LoadingButton \n                color='warning' \n                size='medium'\n                variant='contained' \n                onClick={(e)=>setModal(!openModal)}\n                >\n                  Cancelar\n              </LoadingButton>\n            </div>\n            {!loading && message &&\n              <p>{message}</p>\n            }\n            \n          </form>\n\n        </div>\n      )}\n    </>\n  )\n}\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Container, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { Typography, Button, Grid } from '@mui/material';\n\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from 'src/context/UserContext';\nimport { BrandsModal } from 'src/components/Modals/BrandsModal/BrandsModal';\n\nfunction PageHeader() {\n  const [modal, setModal] = React.useState<Boolean>(false);\n\n  const {\n    usuario\n  }= useContext(UserContext);\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Marcas\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          Gerencie as marcas dos seus produtos\n        </Typography>\n      </Grid>\n      <Grid item>\n      {usuario?.id_perfil === 3 ? '': <Button\n          sx={{ mt: { xs: 2, md: 0 } }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n          style={{backgroundColor: \"rgb(18, 80, 130)\"}}\n          onClick={(e)=>setModal(!modal)\n          }\n        >\n          Cadastrar marca\n        </Button>}\n      </Grid>\n      <BrandsModal data={null} setModal={setModal} openModal={modal} edit={false}/>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions({id_brand}) {\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\n  const moreRef = useRef<HTMLButtonElement | null>(null);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [modal, setModal] = useState(false);\n\n  const openMenu = (): void => {\n    menuOpen(true);\n  };\n\n  const closeMenu = (): void => {\n    menuOpen(false);\n  };\n\n   const DeleteBrand = async (e: any) =>{\n    setModal(true)\n    e.preventDefault();\n    const fetchCategory = fetch(`https://nestrental.com.br:80/api/marcas/${id_brand[0]}`,{\n      method: 'DELETE'\n    })\n\n    const response = await fetchCategory;\n    const json = await response.json();\n    setMessage('Marca excluída com sucesso.')\n    window.location.reload();\n\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Ações:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n            onClick={(e)=>DeleteBrand(e)}\n          >\n            Excluir\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { FC, ChangeEvent, useState, useCallback  } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Typography,\n  useTheme,\n  CardHeader\n} from '@mui/material';\n\n\nimport { read, utils, writeFileXLSX } from 'xlsx';\nimport { IBrand } from 'src/models/product';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport BulkActions from './BulkActions';\nimport {FaCloudDownloadAlt} from 'react-icons/fa'\nimport { api } from 'src/api/api';\nimport { BrandsModal } from 'src/components/Modals/BrandsModal/BrandsModal';\n\ninterface BrandsTableProps {\n  className: string;\n  brands: IBrand[];\n  panel: Boolean;\n}\n\nconst applyFilters = (\n  brands: IBrand[],\n): IBrand[] => {\n  return brands.filter((brands) => {\n    let matches = true;\n\n    /*\n    if (filters.status && cryptoOrder.status !== filters.status) {\n      matches = false;\n    }*/\n\n    return matches;\n  });\n};\n\nconst applyPagination = (\n  brands: IBrand[],\n  page: number,\n  limit: number\n): IBrand[] => {\n  return brands.slice(page * limit, page * limit + limit);\n};\n\n\n\n\n\n\nconst BrandsTable: FC<BrandsTableProps> = ({ brands }) => {\n\n  const [selectedBrands, setSelectedBrands] = useState<string[]>([]);\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(5);\n  const [data, setData] = useState<IBrand>(null);\n  const [modal, setModal] = useState<Boolean>(false)\n\n\n  const selectedBulkActions = selectedBrands.length > 0;\n  const exportFile = useCallback(() => {\n    const ws = utils.json_to_sheet(brands);\n    const wb = utils.book_new();\n    utils.book_append_sheet(wb, ws, \"Data\");\n    writeFileXLSX(wb, \"Marcas.xlsx\");\n  }, [brands]);\n  const handleSelectAllBrands = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    setSelectedBrands(\n      event.target.checked\n        ? brands.map((brand) => brand.id)\n        : []\n    );\n  };\n\n\n  const handleSelectOneBrand = (event: ChangeEvent<HTMLInputElement>, brand: string): void => {\n    if (!selectedBrands.includes(brand)) {\n      setSelectedBrands((prevSelected) => [\n        ...prevSelected,\n        brand\n      ]);\n    } else {\n      setSelectedBrands((prevSelected) =>\n        prevSelected.filter((id) => id !== brand)\n      );\n    }\n  };\n\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage);\n  };\n\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredBrands = applyFilters(brands);\n\n  const paginatedBrands = applyPagination(\n    filteredBrands,\n    page,\n    limit\n  );\n\n  const selectedSomeBrands =\n    selectedBrands.length > 0 &&\n    selectedBrands.length < brands.length;\n  const selectedAllBrands =\n  selectedBrands.length === brands.length;\n  const theme = useTheme();\n\n  async function queryBrandById(idBrand: any){\n    setModal(!modal)\n    setData(null)\n    const {data} = await api.get(`/marcas/${idBrand}`);\n    if(data){\n      setData(data);\n    }else{\n      setData(null);\n    }\n  }\n\n  \n\n  return (\n    <Card>\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions id_brand={selectedBrands}/>\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n                <FaCloudDownloadAlt onClick={exportFile} style={{\n                    textAlign: 'right',\n                    position: 'relative',\n                    left: '7rem',\n                    height: '25px',\n                    width: '25px',\n                    cursor: 'pointer'\n                }}/>\n            </Box>\n          }\n          title=\"Marcas cadastradas\"\n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                \n              </TableCell>\n              <TableCell>Nome marca</TableCell>\n              <TableCell>ID Marca</TableCell>\n              <TableCell align=\"right\">Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedBrands.map((brands) => {\n              const isBrandSelected = selectedBrands.includes(\n                brands.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={brands.id}\n                  selected={isBrandSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isBrandSelected}\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                        handleSelectOneBrand(event, brands.id)\n                      }\n                      value={isBrandSelected}\n                    />\n                  </TableCell>\n\n                  <TableCell>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {(brands.nome)}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {brands.identificador}\n                    </Typography>\n                  </TableCell>\n                 \n                  <TableCell align=\"right\">\n                    <Tooltip title=\"Editar Marca\" arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': {\n                            background: theme.colors.primary.lighter\n                          },\n                          color: theme.palette.primary.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={(e)=>queryBrandById(brands.id)}\n                      >\n                        <EditTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredBrands.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n       {data && modal && (<BrandsModal \n        openModal={modal}\n        setModal={setModal}\n        data={data}\n        edit={true}\n      />)}\n    </Card>\n  );\n};\n\nBrandsTable.propTypes = {\n  brands: PropTypes.array.isRequired\n};\n\nBrandsTable.defaultProps = {\n  brands: []\n};\n\nexport default BrandsTable;\n","import { Card } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport http from 'src/http/index';\nimport { IBrand } from 'src/models/product';\nimport BrandsTable from './BrandsTable';\n\n\n\nfunction Brands() {\n\n  const [brands, setBrands] = useState<IBrand[]>([]);\n\n  async function getAllBrands(){\n    const {data} = await http.get(\"/marcas\");\n    setBrands(data);\n  }\n\n  useEffect(()=>{\n    getAllBrands();\n  }, [])\n\n  return (\n    <Card>\n      <BrandsTable brands={brands?brands:[]} panel={false} className=''/>\n    </Card>\n  );\n}\n\nexport default Brands;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeaderOrders from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport Brands from './Brands';\n\n\n\nfunction ApplicationsTransactions() {\n  return (\n    <>\n      <Helmet>\n        <title>Marcas - Produtos</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeaderOrders />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Brands/>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default ApplicationsTransactions;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19z\"\n}, \"1\")], 'EditTwoTone');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__5Lj9m\",\"modal__divCloseButton\":\"Modal_modal__divCloseButton__tTZ3Y\",\"modal__divCloseButton__closeButton\":\"Modal_modal__divCloseButton__closeButton__ABY0m\",\"modal__closeButton\":\"Modal_modal__closeButton__ZDrqX\",\"modalCategory\":\"Modal_modalCategory__IjrSy\",\"modalCategory__divCloseButton\":\"Modal_modalCategory__divCloseButton__5mZKo\",\"modalCategory__closeButton\":\"Modal_modalCategory__closeButton__fGLZH\"};"],"names":["BrandsModal","openModal","setModal","data","edit","useState","editedBrand","setEditedBrand","newBrand","setNewBrand","idBrand","setIdBrand","loading","setLoading","message","setMessage","event","preventDefault","http","nome","identificador","then","response","status","catch","error","window","location","reload","useEffect","id","className","styles","style","backgroundColor","onClick","e","onSubmit","marginTop","type","label","fullWidth","required","color","placeholder","onChange","target","value","display","gridGap","variant","size","PageTitle","styled","Box","theme","spacing","children","maxWidth","React","modal","usuario","useContext","UserContext","Grid","container","justifyContent","alignItems","item","Typography","component","gutterBottom","id_perfil","Button","sx","mt","xs","md","startIcon","AddTwoTone","fontSize","ButtonError","colors","main","palette","contrastText","dark","id_brand","onMenuOpen","menuOpen","moreRef","useRef","DeleteBrand","fetchCategory","fetch","method","json","ml","DeleteTwoTone","IconButton","ref","p","MoreVertTwoTone","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","BrandsTable","brands","selectedBrands","setSelectedBrands","page","setPage","limit","setLimit","setData","selectedBulkActions","length","exportFile","useCallback","ws","utils","wb","writeFileXLSX","filteredBrands","filter","applyFilters","paginatedBrands","slice","applyPagination","useTheme","api","Card","flex","CardHeader","action","width","textAlign","position","left","height","cursor","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","isBrandSelected","includes","hover","selected","padding","Checkbox","checked","brand","prevSelected","noWrap","fontWeight","Tooltip","arrow","background","primary","lighter","queryBrandById","EditTwoTone","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","setBrands","getAllBrands","panel","PageTitleWrapper","Container","direction","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity"],"sourceRoot":""}