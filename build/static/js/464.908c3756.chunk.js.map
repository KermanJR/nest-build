{"version":3,"file":"static/js/464.908c3756.chunk.js","mappings":"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","sources":["content/applications/Clients/BulkActions.tsx","content/applications/OrdersClient/PageHeaderOrders.tsx","content/applications/OrdersClient/OrdersTableClient.tsx","content/applications/OrdersClient/OrdersClient.tsx","content/applications/OrdersClient/index.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\n  const moreRef = useRef<HTMLButtonElement | null>(null);\n\n  const openMenu = (): void => {\n    menuOpen(true);\n  };\n\n  const closeMenu = (): void => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Ações:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Excluir\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { Typography, Button, Grid } from '@mui/material';\n\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport React, { useContext } from 'react';\nimport { ClientsModal } from 'src/components/Modals/ClientsModal/ClientsModal';\nimport { RegisterOrderModal } from 'src/components/Modals/RegisterOrderModal/RegisterOrderModal';\nimport { UserContext } from 'src/context/UserContext';\n\nfunction PageHeaderOrders() {\n\n  const {\n    usuario\n  } = useContext(UserContext);\n\n\n  const [modal, setModal] = React.useState<Boolean>(false);\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Pedidos\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {usuario?.id_perfil === 1 && (\n            <label>Cadastre novos pedidos da sua empresa.</label>\n            )\n          }\n          {usuario?.id_perfil === 2 && (\n           <label>Consulte novos pedidos da sua empresa.</label>\n            )\n          }\n          {usuario?.id_perfil === 3 && (\n            <label>{usuario?.nome_fantasia}, consulte novos pedidos da sua empresa.</label>\n            )\n          }\n          \n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeaderOrders;\n","import { FC, ChangeEvent, useState, useContext, useCallback } from 'react';\nimport { api } from 'src/api/api';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  useTheme,\n  CardHeader\n} from '@mui/material';\n\n\nimport { read, utils, writeFileXLSX } from 'xlsx';\nimport { IOrder } from 'src/models/product';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport BulkActions from '../Clients/BulkActions';\nimport { FaCloudDownloadAlt } from 'react-icons/fa'\nimport { RegisterOrderModal } from 'src/components/Modals/RegisterOrderModal/RegisterOrderModal';\nimport moment from 'moment';\nimport { BsEye } from 'react-icons/bs'\nimport { UserContext } from 'src/context/UserContext';\n\ninterface OrdersClientTableProps {\n  className: string;\n  ordersClient: IOrder[];\n  panel: boolean;\n}\n\n\n\nconst OrdersTableClient: FC<OrdersClientTableProps> = ({  ordersClient,  panel}) => {\n\n  const [selectedOrdersClient, setSelectedOrdersClient] = useState<string[]>(\n    []\n  );\n  const selectedBulkActions = selectedOrdersClient.length > 0;\n\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(5);\n\n\n  const applyFilters = (\n    orders: IOrder[],\n  ): IOrder[] => {\n    return orders.filter((order) => {\n      let matches = true;\n      return matches;\n    });\n  };\n  \n  const applyPagination = (\n    orders: IOrder[],\n    page: number,\n    limit: number\n  ): IOrder[] => {\n    return orders.slice(page * limit, page * limit + limit);\n  };\n\n  const exportFile = useCallback(() => {\n    const ws = utils.json_to_sheet(ordersClient);\n    const wb = utils.book_new();\n    utils.book_append_sheet(wb, ws, \"Data\");\n    writeFileXLSX(wb, \"Pedidos.xlsx\");\n  }, [ordersClient]);\n\n  const handleSelectAllOrders = (\n    event: ChangeEvent<HTMLInputElement>,\n  ): void => {\n    setSelectedOrdersClient(\n      event.target.checked\n        ? ordersClient.map((order) => order.id)\n        : []\n    );\n  };\n\n  const handleSelectOneOrder = (\n    event: ChangeEvent<HTMLInputElement>,\n    order: string\n  ): void => {\n    if (!selectedOrdersClient.includes(order)) {\n      setSelectedOrdersClient((prevSelected) => [\n        ...prevSelected,\n        order\n      ]);\n    } else {\n      setSelectedOrdersClient((prevSelected) =>\n        prevSelected.filter((id) => id !== order)\n      );\n    }\n  };\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredOrdersClient = applyFilters(ordersClient);\n  const paginatedOrdersClient = applyPagination(\n    filteredOrdersClient,\n    page,\n    limit\n  );\n  const selectedSomeOrdersClient =\n    selectedOrdersClient.length > 0 &&\n    selectedOrdersClient.length < ordersClient.length;\n  const selectedAllOrders =\n  selectedOrdersClient.length === ordersClient.length;\n  const theme = useTheme();\n\n\n  const [data, setData] = useState({});\n  const [idOrder, setIdOrder] = useState<IOrder[]>([]);\n  const [modal, setModal] = useState<Boolean>(false)\n  \n\n  async function queryOrdersById(idOrder: any){\n    setModal(!modal)\n    setData(null)\n    const {data} = await api.get(`/pedidos/${idOrder}`);\n    if(data){\n      setData({data});\n    }else{\n      setData(null);\n    }\n  }\n\n\n  const {\n    usuario\n  } = useContext(UserContext);\n\n\n\n  return (\n    <Card >\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n                {/*<InputLabel>Status</InputLabel>\n                <Select\n                  value={filters.status || 'all'}\n                  onChange={handleStatusChange}\n                  label=\"Status\"\n                  autoWidth\n                >\n                  {statusOptions.map((statusOption) => (\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\n                      {statusOption.name}\n                    </MenuItem>\n                  ))}\n                  </Select>*/}\n                  \n              </FormControl>\n              {!panel && (\n                <FaCloudDownloadAlt onClick={exportFile} style={{\n                textAlign: 'right',\n                position: 'relative',\n                left: '7rem',\n                height: '25px',\n                width: '25px',\n                cursor: 'pointer'\n               }}/>\n              )}\n            </Box>\n            \n            \n          }\n          title={panel? \"Pedidos recentes\": \"Pedidos cadastrados\"}\n          \n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                \n              </TableCell>\n              <TableCell>Empresa</TableCell>\n              <TableCell>Contato</TableCell>\n              <TableCell>Início e Devolução</TableCell>\n              <TableCell align=\"right\">Valor</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ordersClient.map((orderClient) => {\n              const isOrderClientSelected = selectedOrdersClient.includes(\n                orderClient.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={orderClient.id}\n                  selected={isOrderClientSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isOrderClientSelected}\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                        handleSelectOneOrder(event, orderClient.id)\n                      }\n                      value={isOrderClientSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {orderClient?.cliente?.razao_social}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {orderClient?.cliente?.email}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {moment(orderClient.data_inicio).utc().format('DD/MM/yyyy')}\n                    </Typography>\n                    <Typography \n                        variant=\"body1\"\n                        fontWeight=\"bold\"\n                        color=\"text.secondary\"\n                        gutterBottom \n                        noWrap\n                    >\n                      {moment(orderClient.data_entrega).utc().format('DD/MM/yyyy')}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n\n                    \n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                    R${numeral(orderClient.vr_total).format(\n                        `0,0.00`\n                      )}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                    {orderClient?.status === 'encerrado' && <p style={{color: 'red', fontSize: '.875rem', fontWeight: 'bold'}}>Encerrado</p>\n                    }\n                      {orderClient?.status === 'aberto' && <p style={{color: 'green', fontSize: '.875rem', fontWeight: 'bold'}}>Em aberto</p>\n                    }\n                    </Typography>\n                  </TableCell>\n\n                      \n                    <TableCell align=\"right\">\n                    <Tooltip title=\"Visualizar pedido\" arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': {\n                            background: theme.colors.primary.lighter\n                          },\n                          color: theme.palette.primary.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={(e)=>queryOrdersById(orderClient?.id)}\n                      >\n                        <BsEye style={{width: '20px', height: '20px'}}/>\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredOrdersClient.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n      {data  && modal &&(\n        <RegisterOrderModal \n        openModal={modal}\n        setModal={setModal}\n        data={data}\n        edit={true}\n      />\n      )}\n    </Card>\n  );\n};\n\nOrdersTableClient.propTypes = {\n  ordersClient: PropTypes.array.isRequired\n};\n\nOrdersTableClient.defaultProps = {\n  ordersClient: []\n};\n\nexport default OrdersTableClient;\n","\nimport { Card } from '@mui/material';\nimport { useContext, useEffect, useState } from 'react';\nimport { UserContext } from 'src/context/UserContext';\nimport OrdersTableClient from './OrdersTableClient';\nimport { IOrder } from 'src/models/product';\nimport http from 'src/http';\n\n\n\nfunction OrdersClient() {\n\n  const [ordersByClient, setOrdersByClient] = useState([]);\n  const [statusAllDocument, setStatusAllDocument] = useState([{}]);\n  const { usuario } = useContext(UserContext);\n\n  const getAllOrdersByClient = async ()=>{\n    if(usuario?.id !== undefined){\n      const {data} = await http.get(`/pedidos/dashboard/${usuario?.id}`);\n      setOrdersByClient(data);\n    }\n  }\n\n\n\n\n  useEffect(()=>{\n    getAllOrdersByClient();\n  }, [usuario?.id !== undefined])\n\n  return (\n    <Card>\n      {ordersByClient ?\n        <OrdersTableClient  panel={true}  ordersClient={ordersByClient?ordersByClient:[]}  className=\"\"/> \n          : \n        <></>\n      }\n    </Card>\n  );\n}\n\nexport default OrdersClient;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeaderOrders from './PageHeaderOrders';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport OrdersClient from './OrdersClient';\n\n\n\nfunction ApplicationsTransactions() {\n  return (\n    <>\n      <Helmet>\n        <title>Vendas - Pedidos</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeaderOrders />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <OrdersClient/>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default ApplicationsTransactions;\n"],"names":["ButtonError","styled","Button","theme","colors","error","main","palette","contrastText","dark","useState","onMenuOpen","menuOpen","moreRef","useRef","display","alignItems","justifyContent","variant","color","sx","ml","startIcon","onClick","ref","p","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","usuario","useContext","UserContext","React","Grid","container","item","Typography","component","gutterBottom","id_perfil","nome_fantasia","OrdersTableClient","ordersClient","panel","selectedOrdersClient","setSelectedOrdersClient","selectedBulkActions","length","page","setPage","limit","setLimit","exportFile","useCallback","ws","utils","wb","writeFileXLSX","filteredOrdersClient","filter","order","orders","slice","applyPagination","useTheme","data","setData","modal","setModal","idOrder","api","Card","Box","flex","BulkActions","CardHeader","action","width","FormControl","fullWidth","style","textAlign","position","left","height","cursor","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","orderClient","isOrderClientSelected","includes","id","hover","selected","padding","Checkbox","checked","onChange","event","prevSelected","value","fontWeight","noWrap","cliente","razao_social","email","moment","data_inicio","utc","format","data_entrega","numeral","vr_total","status","fontSize","Tooltip","arrow","IconButton","background","primary","lighter","size","e","queryOrdersById","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","rowsPerPage","rowsPerPageOptions","RegisterOrderModal","openModal","edit","defaultProps","ordersByClient","setOrdersByClient","getAllOrdersByClient","undefined","http","useEffect","className","PageTitleWrapper","Container","maxWidth","direction","spacing","xs"],"sourceRoot":""}