{"version":3,"file":"static/js/941.da6b04eb.chunk.js","mappings":"2hBAiBMA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAClB,gBAAGE,EAAK,EAALA,MAAK,mCACSA,EAAMC,OAAOC,MAAMC,KAAI,0BAC5BH,EAAMI,QAAQF,MAAMG,aAAY,oDAGxBL,EAAMC,OAAOC,MAAMI,KAAI,sBA6D7C,MAxDA,WACE,OAA+BC,EAAAA,EAAAA,WAAkB,GAAM,eAAhDC,EAAU,KAAEC,EAAQ,KACrBC,GAAUC,EAAAA,EAAAA,QAAiC,MAUjD,OACE,iCACE,UAACC,EAAA,EAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,gBAAe,WACpE,UAACH,EAAA,EAAG,CAACC,QAAQ,OAAOC,WAAW,SAAQ,WACrC,SAACE,EAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,iBAAgB,SAAC,kBAGhD,SAACrB,EAAW,CACVsB,GAAI,CAAEC,GAAI,GACVC,WAAW,SAACC,EAAA,EAAiB,IAC7BL,QAAQ,YAAW,SACpB,gBAIH,SAACM,EAAA,EAAU,CACTL,MAAM,UACNM,QAzBS,WACff,GAAS,IAyBHgB,IAAKf,EACLS,GAAI,CAAEC,GAAI,EAAGM,EAAG,GAAI,UAEpB,SAACC,EAAA,EAAmB,UAIxB,SAACC,EAAA,EAAI,CACHC,aAAW,EACXC,SAAUpB,EAAQqB,QAClBC,KAAMxB,EACNyB,QAjCY,WAChBxB,GAAS,IAiCLyB,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,gB,qBC9BhBE,EAAoC,SAAH,GAA2B,IAArBC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAEnD,GAA4CjC,EAAAA,EAAAA,UAAmB,IAAG,eAA3DkC,EAAc,KAAEC,EAAiB,KAClCC,EAAsBF,EAAeG,OAAS,EACpD,GAAwBrC,EAAAA,EAAAA,UAAiB,GAAE,eAApCsC,EAAI,KAAEC,EAAO,KACpB,GAA0BvC,EAAAA,EAAAA,UAAiB,GAAE,eAAtCwC,EAAK,KAAEC,EAAQ,KAyBlBC,GAAaC,EAAAA,EAAAA,cAAY,WAC7B,IAAMC,EAAKC,EAAAA,GAAAA,cAAoBb,GACzBc,EAAKD,EAAAA,GAAAA,WACXA,EAAAA,GAAAA,kBAAwBC,EAAIF,EAAI,SAChCG,EAAAA,EAAAA,IAAcD,EAAI,kBACjB,CAACd,IAoCIgB,EAhEa,SACnBhB,GAEA,OAAOA,EAAOiB,QAAO,SAACC,GAOpB,OANc,KA4DOC,CAAanB,GAC9BoB,EAnDgB,SACtBpB,EACAM,EACAE,GAEA,OAAOR,EAAOqB,MAAMf,EAAOE,EAAOF,EAAOE,EAAQA,GA8CzBc,CACtBN,EACAV,EACAE,GAQI/C,GALJyC,EAAeG,OAAS,IACxBH,EAAeG,OAASL,EAAOK,QAGjCH,EAAeG,OAAWL,EAAOK,QACnBkB,EAAAA,EAAAA,MAGd,GAAwBvD,EAAAA,EAAAA,UAAS,IAAG,eAA7BwD,GAAI,KAAEC,GAAO,KACpB,IAA8BzD,EAAAA,EAAAA,UAAmB,IAAG,iBACpD,IADc,MAAY,OACAA,EAAAA,EAAAA,WAAkB,IAAM,iBAA3C0D,GAAK,MAAEC,GAAQ,MACtB,IAA8C3D,EAAAA,EAAAA,UAAS,IAAG,iBAAnD4D,GAAe,MAAoB,MAa1C,cADC,OACD,2BAVA,WAA+BC,GAAc,IAAF,0EAE5B,OADbF,IAAUD,IACVD,GAAQ,MAAK,SACQK,EAAAA,GAAAA,IAAQ,YAAD,OAAaD,IAAW,KAAD,WAA5CL,EAAI,EAAJA,KAELC,GADCD,EACO,CAACA,KAAAA,GAED,MACT,2CACF,yBAE+B,cAa/B,OAb+B,2BAAhC,WAAiCI,GAAyB,OAAF,+DACpDG,EAAAA,EAAAA,IAAS,kCAAD,OAAmCH,GAAmB,CAC5DI,OAAQ,MACRC,QAAQ,CACN,eAAgB,sBAGnBC,MAAK,SAAAC,GACJ,OAAOA,EAASX,KAAKA,KAAKY,SAASC,UAClCC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MACZ,2CAEL,yBAQD,OANAG,EAAAA,EAAAA,YAAU,YAjBT,SAEgC,GAAD,yBAgB9BC,CAAkBf,MACjB,CAACA,MAKF,UAACgB,EAAA,EAAI,WACFxC,IACC,SAAC/B,EAAA,EAAG,CAACwE,KAAM,EAAG1D,EAAG,EAAE,UACjB,SAAC,EAAW,OAGdiB,IACA,SAAC0C,EAAA,EAAU,CACTC,QACE,UAAC1E,EAAA,EAAG,CAAC2E,MAAO,IAAI,WACd,SAACC,EAAA,EAAW,CAACC,WAAS,EAACxE,QAAQ,cAG7B,SAAC,MAAkB,CAACO,QAASyB,EAAYyC,MAAO,CAChDC,UAAW,QACXC,SAAU,WACVC,KAAM,OACNC,OAAQ,OACRP,MAAO,OACPQ,OAAQ,gBAOdC,MAAOxD,EAAO,mBAAoB,yBAItC,SAACyD,EAAA,EAAO,KACR,SAACC,EAAA,EAAc,WACb,UAACC,EAAA,EAAK,YACJ,SAACC,EAAA,EAAS,WACR,UAACC,EAAA,EAAQ,YACT,SAACC,EAAA,EAAS,KACR,SAACA,EAAA,EAAS,UAAC,aACX,SAACA,EAAA,EAAS,UAAC,aACX,SAACA,EAAA,EAAS,UAAC,iCACX,SAACA,EAAA,EAAS,CAACC,MAAM,QAAO,SAAC,WACzB,SAACD,EAAA,EAAS,CAACC,MAAM,QAAO,SAAC,YACzB,SAACD,EAAA,EAAS,CAACC,MAAM,QAAO,SAAC,sBAG7B,SAACC,EAAA,EAAS,UACP7C,EAAgB8C,KAAI,SAAChD,GAAW,IAAD,IACxBiD,EAAkBjE,EAAekE,SACrClD,EAAMmD,IAER,OACE,UAACP,EAAA,EAAQ,CACPQ,OAAK,EAELC,SAAUJ,EAAgB,WAE1B,SAACJ,EAAA,EAAS,CAACS,QAAQ,WAAU,UAC3B,SAACC,EAAA,EAAQ,CACP9F,MAAM,UACN+F,QAASP,EACTQ,SAAU,SAACC,GAAoC,OAzIhC,SACjCA,EACA1D,GAEKhB,EAAekE,SAASlD,GAM3Bf,GAAkB,SAAC0E,GAAY,OAC7BA,EAAa5D,QAAO,SAACoD,GAAE,OAAKA,IAAOnD,QANrCf,GAAkB,SAAC0E,GAAY,wBAC1BA,GAAY,CACf3D,OAmIgB4D,CAA2BF,EAAO1D,EAAMmD,KAE1CU,MAAOZ,OAGX,SAACJ,EAAA,EAAS,WACR,SAACtF,EAAA,EAAU,CACTC,QAAQ,QACRsG,WAAW,OACXrG,MAAM,eACNsG,cAAY,EACZC,QAAM,WAEA,OAALhE,QAAK,IAALA,GAAc,QAAT,EAALA,EAAOiE,eAAO,WAAT,EAAL,EAAgBC,kBAGrB,SAACrB,EAAA,EAAS,WACR,SAACtF,EAAA,EAAU,CACTC,QAAQ,QACRsG,WAAW,OACXrG,MAAM,eACNsG,cAAY,EACZC,QAAM,WAEA,OAALhE,QAAK,IAALA,GAAc,QAAT,EAALA,EAAOiE,eAAO,WAAT,EAAL,EAAgBE,WAGrB,UAACtB,EAAA,EAAS,YACR,SAACtF,EAAA,EAAU,CACTC,QAAQ,QACRsG,WAAW,OACXrG,MAAM,eACNsG,cAAY,EACZC,QAAM,WAELI,IAAOpE,EAAMqE,aAAaC,MAAMC,OAAO,iBAE1C,SAAChH,EAAA,EAAU,CACPC,QAAQ,QACRsG,WAAW,OACXrG,MAAM,iBACNsG,cAAY,EACZC,QAAM,WAEPI,IAAOpE,EAAMwE,cAAcF,MAAMC,OAAO,oBAG7C,UAAC1B,EAAA,EAAS,CAACC,MAAM,QAAO,WACtB,SAACvF,EAAA,EAAU,CACTC,QAAQ,QACRsG,WAAW,OACXrG,MAAM,eACNsG,cAAY,EACZC,QAAM,KAKR,UAACzG,EAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBuG,QAAM,YAAC,KACvDS,IAAQzE,EAAM0E,UAAUH,OAAO,iBAMpC,UAAC1B,EAAA,EAAS,CAACC,MAAM,QAAO,WACtB,SAACvF,EAAA,EAAU,CACTC,QAAQ,QACRsG,WAAW,OACXrG,MAAM,eACNsG,cAAY,EACZC,QAAM,KAKR,UAACzG,EAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBuG,QAAM,YACtC,eAAb,OAALhE,QAAK,IAALA,OAAK,EAALA,EAAOmB,UAA0B,cAAGc,MAAO,CAACxE,MAAO,MAAOkH,SAAU,UAAWb,WAAY,QAAQ,SAAC,cAEhF,YAAb,OAAL9D,QAAK,IAALA,OAAK,EAALA,EAAOmB,UAAuB,cAAGc,MAAO,CAACxE,MAAO,QAASkH,SAAU,UAAWb,WAAY,QAAQ,SAAC,qBAMtG,SAACjB,EAAA,EAAS,CAACC,MAAM,QAAO,UACxB,SAAC8B,EAAA,EAAO,CAACrC,MAAM,oBAAoBsC,OAAK,YACtC,SAAC/G,EAAA,EAAU,CACTJ,GAAI,CACF,UAAW,CACToH,WAAYvI,EAAMC,OAAOuI,QAAQC,SAEnCvH,MAAOlB,EAAMI,QAAQoI,QAAQrI,MAE/Be,MAAM,UACNwH,KAAK,QACLlH,QAAS,SAACmH,GAAC,OAhMyB,SAG3B,GAAD,gCA6LMC,CAAqB,OAALnF,QAAK,IAALA,OAAK,EAALA,EAAOmD,KAAI,UAEzC,SAAC,MAAK,CAAClB,MAAO,CAACH,MAAO,OAAQO,OAAQ,kBA1GvCrC,EAAMmD,eAoHvB,SAAChG,EAAA,EAAG,CAACc,EAAG,EAAE,UACR,SAACmH,EAAA,EAAe,CACdC,UAAU,MACVC,MAAOxF,EAAeX,OACtBoG,aA1OiB,SAAC7B,EAAY8B,GACpCnG,EAAQmG,IA0OFC,oBAvOkB,SAAC/B,GACzBnE,EAASmG,SAAShC,EAAMiC,OAAO9B,SAuOzBzE,KAAMA,EACNwG,YAAatG,EACbuG,mBAAoB,CAAC,EAAG,GAAI,GAAI,QAGnCvF,IAASE,KACR,SAACsF,EAAA,EAAkB,CACnBC,UAAWvF,GACXC,SAAUA,GACVH,KAAMA,GACN0F,MAAM,QAWdnH,EAAYoH,aAAe,CACzBnH,OAAQ,IAGV,S,kJCvUA,MAnCA,WAEE,IACEoH,GACEC,EAAAA,EAAAA,YAAWC,EAAAA,GADbF,QAIF,EAA0BG,EAAAA,UAAwB,GAAM,eAExD,OAFY,KAAU,MAGpB,SAACC,EAAA,GAAI,CAACC,WAAS,EAACjJ,eAAe,gBAAgBD,WAAW,SAAQ,UAChE,UAACiJ,EAAA,GAAI,CAACE,MAAI,aACR,SAACjJ,EAAA,EAAU,CAACC,QAAQ,KAAK6H,UAAU,KAAKtB,cAAY,WAAC,aAGrD,UAACxG,EAAA,EAAU,CAACC,QAAQ,YAAW,UACL,KAAhB,OAAP0I,QAAO,IAAPA,OAAO,EAAPA,EAASO,aACR,2BAAO,2CAGe,KAAhB,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASO,aACT,2BAAO,2CAGgB,KAAhB,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASO,aACR,6BAAe,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASQ,cAAc,uD,4ECE3C,MAzBA,WAEE,OAA4B5J,EAAAA,EAAAA,UAAmB,IAAG,eAA3CgC,EAAM,KAAE6H,EAAS,KAEhBT,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,GAAvBF,QAEmB,aAI1B,OAJ0B,0BAA3B,2GACuBrF,EAAAA,EAAAA,IAAS,sBAAD,OAA8B,OAAPqF,QAAO,IAAPA,OAAO,EAAPA,EAAS/C,KAAM,KAAD,WAA3D7C,EAAI,EAAJA,KACPqG,EAAUrG,GAAM,4CAEjB,sBAMD,OAJAkB,EAAAA,EAAAA,YAAU,YARkC,WAEjB,wBAOvBoF,KACD,KAGD,SAAClF,EAAA,EAAI,UACF5C,GACC,SAACD,EAAA,EAAW,CAACC,OAAQA,GAAe,GAAIC,OAAO,IAAU,MCKjE,MA1BA,WACE,OACE,iCACE,SAAC,KAAM,WACL,2BAAO,wBAET,SAAC8H,EAAA,EAAgB,WACf,SAAC,EAAgB,OAEnB,SAACC,EAAA,EAAS,CAACC,SAAS,KAAI,UACtB,SAACT,EAAA,GAAI,CACHC,WAAS,EACTS,UAAU,MACV1J,eAAe,SACfD,WAAW,UACX4J,QAAS,EAAE,UAEX,SAACX,EAAA,GAAI,CAACE,MAAI,EAACU,GAAI,GAAG,UAChB,SAAC,EAAM","sources":["content/applications/Orders/BulkActions.tsx","content/applications/Orders/OrdersTable.tsx","content/applications/Orders/PageHeaderOrders.tsx","content/applications/Orders/Orders.tsx","content/applications/Orders/index.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\n  const moreRef = useRef<HTMLButtonElement | null>(null);\n\n  const openMenu = (): void => {\n    menuOpen(true);\n  };\n\n  const closeMenu = (): void => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Ações:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Excluir\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { FC, ChangeEvent, useState, useContext, useCallback} from 'react';\nimport { api } from 'src/api/api';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {useEffect} from 'react';\nimport { FaCloudDownloadAlt } from 'react-icons/fa';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  useTheme,\n  CardHeader\n} from '@mui/material';\n\nimport { read, utils, writeFileXLSX } from 'xlsx';\nimport { IOrder } from 'src/models/product';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport { RegisterOrderModal } from 'src/components/Modals/RegisterOrderModal/RegisterOrderModal';\nimport moment from 'moment';\nimport BulkActions from './BulkActions';\nimport { BsEye } from 'react-icons/bs'\nimport { UserContext } from 'src/context/UserContext';\nimport http from 'src/http';\n\ninterface OrdersTableProps {\n  className?: string;\n  orders: IOrder[];\n  panel: boolean;\n}\n\n\nconst OrdersTable: FC<OrdersTableProps> = ({ orders, panel }) => {\n\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\n  const selectedBulkActions = selectedOrders.length > 0;\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(5);\n\nconst applyFilters = (\n  orders: IOrder[],\n): IOrder[] => {\n  return orders.filter((order) => {\n    let matches = true;\n\n    /*if (filters.status && cryptoOrder.status !== filters.status) {\n      matches = false;\n    }*/\n\n    return matches;\n  });\n};\n\nconst applyPagination = (\n  orders: IOrder[],\n  page: number,\n  limit: number\n): IOrder[] => {\n  return orders.slice(page * limit, page * limit + limit);\n};\n\n\nconst exportFile = useCallback(() => {\n  const ws = utils.json_to_sheet(orders);\n  const wb = utils.book_new();\n  utils.book_append_sheet(wb, ws, \"Data\");\n  writeFileXLSX(wb, \"Pedidos.xlsx\");\n}, [orders]);\n\n  const handleSelectAllOrders = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    setSelectedOrders(\n      event.target.checked\n        ? orders.map((order) => order.id)\n        : []\n    );\n  };\n\n  const handleSelectOneCryptoOrder = (\n    event: ChangeEvent<HTMLInputElement>,\n    order: string\n  ): void => {\n    if (!selectedOrders.includes(order)) {\n      setSelectedOrders((prevSelected) => [\n        ...prevSelected,\n        order\n      ]);\n    } else {\n      setSelectedOrders((prevSelected) =>\n        prevSelected.filter((id) => id !== order)\n      );\n    }\n  };\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredOrders = applyFilters(orders);\n  const paginatedOrders = applyPagination(\n    filteredOrders,\n    page,\n    limit\n  );\n  const selectedSomeOrders =\n    selectedOrders.length > 0 &&\n    selectedOrders.length < orders.length;\n\n  const selectedAllOrders =\n  selectedOrders.length === orders.length;\n  const theme = useTheme();\n\n\n  const [data, setData] = useState({});\n  const [idOrder, setIdOrder] = useState<IOrder[]>([]);\n  const [modal, setModal] = useState<Boolean>(false)\n  const [idTokenContrato, setIdTokenContrato] = useState('')\n  \n\n  async function queryOrdersById(idOrder: any){\n    setModal(!modal)\n    setData(null)\n    const {data} = await api.get(`/pedidos/${idOrder}`);\n    if(data){\n      setData({data});\n    }else{\n      setData(null);\n    }\n  }\n  //Retorna status do documento do clicksign.\n  async function getStatusDocument(idTokenContrato: string){\n      http.get(`/clicksign/get-status-document/${idTokenContrato}`, {\n        method: 'GET',\n        headers:{\n          'Content-Type': 'application/json'\n        },\n      })\n      .then(response=>{\n        return response.data.data.document.status\n      }).catch(err=>{\n        console.log(err)\n      })\n    \n  }\n\n  useEffect(()=>{\n    getStatusDocument(idTokenContrato)\n  }, [idTokenContrato])\n\n\n\n  return (\n    <Card >\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n              </FormControl>\n              \n                <FaCloudDownloadAlt onClick={exportFile} style={{\n                textAlign: 'right',\n                position: 'relative',\n                left: '7rem',\n                height: '25px',\n                width: '25px',\n                cursor: 'pointer'\n               }}/>\n             \n            </Box>\n            \n            \n          }\n          title={panel? \"Pedidos recentes\": \"Pedidos cadastrados\"}\n          \n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n            <TableCell></TableCell>\n              <TableCell>Empresa</TableCell>\n              <TableCell>Contato</TableCell>\n              <TableCell>Início e Devolução</TableCell>\n              <TableCell align=\"right\">Valor</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedOrders.map((order) => {\n              const isOrderSelected = selectedOrders.includes(\n                order.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={order.id}\n                  selected={isOrderSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isOrderSelected}\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                        handleSelectOneCryptoOrder(event, order.id)\n                      }\n                      value={isOrderSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {order?.cliente?.razao_social}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {order?.cliente?.email}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {moment(order.data_inicio).utc().format('DD/MM/yyyy')}\n                    </Typography>\n                    <Typography \n                        variant=\"body1\"\n                        fontWeight=\"bold\"\n                        color=\"text.secondary\"\n                        gutterBottom \n                        noWrap\n                    >\n                      {moment(order.data_entrega).utc().format('DD/MM/yyyy')}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n\n                    \n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                    R${numeral(order.vr_total).format(\n                        `0,0.00`\n                      )}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n\n                    \n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                    {order?.status === 'encerrado' && <p style={{color: 'red', fontSize: '.875rem', fontWeight: 'bold'}}>Encerrado</p>\n                    }\n                      {order?.status === 'aberto' && <p style={{color: 'green', fontSize: '.875rem', fontWeight: 'bold'}}>Em aberto</p>\n                    }\n                    </Typography>\n                  </TableCell>\n\n\n                    <TableCell align=\"right\">\n                    <Tooltip title=\"Visualizar pedido\" arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': {\n                            background: theme.colors.primary.lighter\n                          },\n                          color: theme.palette.primary.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={(e)=>queryOrdersById(order?.id)}\n                      >\n                        <BsEye style={{width: '20px', height: '20px'}}/>\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredOrders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n      {data  && modal &&(\n        <RegisterOrderModal \n        openModal={modal}\n        setModal={setModal}\n        data={data}\n        edit={true}\n      />\n      )}\n    </Card>\n  );\n};\n\nOrdersTable.propTypes = {\n  orders: PropTypes.array.isRequired\n};\n\nOrdersTable.defaultProps = {\n  orders: []\n};\n\nexport default OrdersTable;\n","import { Typography, Button, Grid } from '@mui/material';\n\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport React, { useContext } from 'react';\nimport { ClientsModal } from 'src/components/Modals/ClientsModal/ClientsModal';\nimport { RegisterOrderModal } from 'src/components/Modals/RegisterOrderModal/RegisterOrderModal';\nimport { UserContext } from 'src/context/UserContext';\n\nfunction PageHeaderOrders() {\n\n  const {\n    usuario\n  } = useContext(UserContext);\n\n\n  const [modal, setModal] = React.useState<Boolean>(false);\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Pedidos\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {usuario?.id_perfil === 1 && (\n            <label>Cadastre novos pedidos da sua empresa.</label>\n            )\n          }\n          {usuario?.id_perfil === 2 && (\n           <label>Consulte novos pedidos da sua empresa.</label>\n            )\n          }\n          {usuario?.id_perfil === 3 && (\n            <label>{usuario?.nome_fantasia}, consulte novos pedidos da sua empresa.</label>\n            )\n          }\n          \n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeaderOrders;\n","import { Card } from '@mui/material';\nimport { useContext, useEffect, useState } from 'react';\nimport { api } from 'src/api/api';\nimport { UserContext } from 'src/context/UserContext';\nimport http from 'src/http';\nimport { IOrder } from 'src/models/product';\nimport OrdersTable from './OrdersTable';\n\n\n\nfunction Orders() {\n\n  const [orders, setOrders] = useState<IOrder[]>([]);\n\n  const { usuario } = useContext(UserContext);\n\n  async function getAllOrders(){\n    const {data} = await http.get(`/pedidos/dashboard/${usuario?.id}`);\n    setOrders(data);\n   \n  }\n\n  useEffect(()=>{\n      getAllOrders();\n  }, [])\n\n  return (\n    <Card>\n      {orders? \n        <OrdersTable orders={orders?orders: []} panel={true}/> : ''\n      }\n    </Card>\n  );\n}\n\nexport default Orders;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeaderOrders from './PageHeaderOrders';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport Orders from './Orders';\n\n\n\nfunction ApplicationsTransactions() {\n  return (\n    <>\n      <Helmet>\n        <title>Vendas - Pedidos</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeaderOrders />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Orders/>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default ApplicationsTransactions;\n"],"names":["ButtonError","styled","Button","theme","colors","error","main","palette","contrastText","dark","useState","onMenuOpen","menuOpen","moreRef","useRef","Box","display","alignItems","justifyContent","Typography","variant","color","sx","ml","startIcon","DeleteTwoTone","IconButton","onClick","ref","p","MoreVertTwoTone","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","OrdersTable","orders","panel","selectedOrders","setSelectedOrders","selectedBulkActions","length","page","setPage","limit","setLimit","exportFile","useCallback","ws","utils","wb","writeFileXLSX","filteredOrders","filter","order","applyFilters","paginatedOrders","slice","applyPagination","useTheme","data","setData","modal","setModal","idTokenContrato","idOrder","api","http","method","headers","then","response","document","status","catch","err","console","log","useEffect","getStatusDocument","Card","flex","CardHeader","action","width","FormControl","fullWidth","style","textAlign","position","left","height","cursor","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","isOrderSelected","includes","id","hover","selected","padding","Checkbox","checked","onChange","event","prevSelected","handleSelectOneCryptoOrder","value","fontWeight","gutterBottom","noWrap","cliente","razao_social","email","moment","data_inicio","utc","format","data_entrega","numeral","vr_total","fontSize","Tooltip","arrow","background","primary","lighter","size","e","queryOrdersById","TablePagination","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","rowsPerPage","rowsPerPageOptions","RegisterOrderModal","openModal","edit","defaultProps","usuario","useContext","UserContext","React","Grid","container","item","id_perfil","nome_fantasia","setOrders","getAllOrders","PageTitleWrapper","Container","maxWidth","direction","spacing","xs"],"sourceRoot":""}